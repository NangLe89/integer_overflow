import java.util.Set;
import utility.Pair;
import utility.SetRepUtility;
import AST.*;

/** The Very Busy Expressions Analysis.
    See Nielsen, Nielsen, and Hankin,
    Principles of Program Analysis, section 2.1.3.
    See also AExp.jrag for helping attributes.
    */
aspect VBTaint {
       /** The kill function for very busy expressions. */
       // syn Set<Expr> Block.killVB(Set<Expr> current);
       eq ReadS.killVB(Set<Expr> current) {
		Set<Expr> ret = SetRepUtility.emptySet();
		String read_var = getVar();
		for (Expr exp : current)
		{
			if (exp.FV().contains(read_var)) 
			ret.add(exp);
		}
		return ret;
	}
       eq SanitizeS.killVB(Set<Expr> current) {
		Set<Expr> ret = SetRepUtility.emptySet();
		String svar = getVar();
		for (Expr exp : current)
		{
			if (exp.FV().contains(svar)) 
			ret.add(exp);
		}
		return ret;
	}
	eq PrintS.killVB(Set<Expr> current) = SetRepUtility.emptySet();

	/** The gen function for very busy expressions. */
	// syn Set<Expr> Block.genVB();
	eq ReadS.genVB() = SetRepUtility.emptySet();
	eq SanitizeS.genVB() = SetRepUtility.emptySet();
	eq PrintS.genVB() = getExpr().Aexps();
}
